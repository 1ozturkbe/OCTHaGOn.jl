$offlisting
*  MINLP written by GAMS Convert at 04/27/01 14:52:58
*  
*  Equation counts
*     Total       E       G       L       N       X
*        73      10      33      30       0       0
*  
*  Variable counts
*                 x       b       i     s1s     s2s      sc      si
*     Total    cont  binary integer    sos1    sos2   scont    sint
*        70      40      30       0       0       0       0       0
*  FX     0       0       0       0       0       0       0       0
*  
*  Nonzero counts
*     Total   const      NL     DLL
*       409     169     240       0
*
*  Solve m using MINLP minimizing objvar;


Variables  b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19
          ,b20,b21,b22,b23,b24,b25,b26,b27,b28,b29,b30,x31,x32,x33,x34,x35,x36
          ,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53
          ,x54,x55,x56,x57,x58,x59,x60,objvar,x62,x63,x64,x65,x66,x67,x68,x69
          ,x70;

Positive Variables x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45
          ,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60;

Binary Variables b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17
          ,b18,b19,b20,b21,b22,b23,b24,b25,b26,b27,b28,b29,b30;

Equations  e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19
          ,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36
          ,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53
          ,e54,e55,e56,e57,e58,e59,e60,e61,e62,e63,e64,e65,e66,e67,e68,e69,e70
          ,e71,e72,e73;


e1..  - ((5.02 + (-0.0003*x31) - 0.0007*x32 - 0.0066*x33 - 0.0044*x34 - 0.0208*
     x35 - 0.0518*x36 - 0.0036*x37 - 0.0507*x38 - 0.0905*x39 - 0.0016*x40)*(
     5.02 + (-0.0003*x31) - 0.0007*x32 - 0.0066*x33 - 0.0044*x34 - 0.0208*x35
      - 0.0518*x36 - 0.0036*x37 - 0.0507*x38 - 0.0905*x39 - 0.0016*x40) + (0.97
      + (-0.0003*x41) - 0.0007*x42 - 0.0066*x43 - 0.0044*x44 - 0.0208*x45 - 
     0.0518*x46 - 0.0036*x47 - 0.0507*x48 - 0.0905*x49 - 0.0016*x50)*(0.97 + (
     -0.0003*x41) - 0.0007*x42 - 0.0066*x43 - 0.0044*x44 - 0.0208*x45 - 0.0518*
     x46 - 0.0036*x47 - 0.0507*x48 - 0.0905*x49 - 0.0016*x50) + (-0.0003*x51 - 
     0.0007*x52 - 0.0066*x53 - 0.0044*x54 - 0.0208*x55 - 0.0518*x56 - 0.0036*
     x57 - 0.0507*x58 - 0.0905*x59 - 0.0016*x60)*(-0.0003*x51 - 0.0007*x52 - 
     0.0066*x53 - 0.0044*x54 - 0.0208*x55 - 0.0518*x56 - 0.0036*x57 - 0.0507*
     x58 - 0.0905*x59 - 0.0016*x60)) + x62 =E= 0;

e2..  - ((2.04 + (-0.0764*x31) - 0.0003*x32 - 0.0789*x33 - 0.0186*x34 - 0.0605*
     x35 - 0.1656*x36 - 0.0035*x37 - 0.0361*x38 - 0.06*x39 - 0.0209*x40)*(2.04
      + (-0.0764*x31) - 0.0003*x32 - 0.0789*x33 - 0.0186*x34 - 0.0605*x35 - 
     0.1656*x36 - 0.0035*x37 - 0.0361*x38 - 0.06*x39 - 0.0209*x40) + (3.51 + (
     -0.0764*x41) - 0.0003*x42 - 0.0789*x43 - 0.0186*x44 - 0.0605*x45 - 0.1656*
     x46 - 0.0035*x47 - 0.0361*x48 - 0.06*x49 - 0.0209*x50)*(3.51 + (-0.0764*
     x41) - 0.0003*x42 - 0.0789*x43 - 0.0186*x44 - 0.0605*x45 - 0.1656*x46 - 
     0.0035*x47 - 0.0361*x48 - 0.06*x49 - 0.0209*x50) + (2.2 + (-0.0764*x51) - 
     0.0003*x52 - 0.0789*x53 - 0.0186*x54 - 0.0605*x55 - 0.1656*x56 - 0.0035*
     x57 - 0.0361*x58 - 0.06*x59 - 0.0209*x60)*(2.2 + (-0.0764*x51) - 0.0003*
     x52 - 0.0789*x53 - 0.0186*x54 - 0.0605*x55 - 0.1656*x56 - 0.0035*x57 - 
     0.0361*x58 - 0.06*x59 - 0.0209*x60)) + x63 =E= 0;

e3..  - ((3.53 + (-0.0318*x31) - 0.0004*x32 - 0.0275*x33 - 0.018*x34 - 0.0601*
     x35 - 0.1491*x36 - 0.0032*x37 - 0.0433*x38 - 0.0754*x39 - 0.0063*x40)*(
     3.53 + (-0.0318*x31) - 0.0004*x32 - 0.0275*x33 - 0.018*x34 - 0.0601*x35 - 
     0.1491*x36 - 0.0032*x37 - 0.0433*x38 - 0.0754*x39 - 0.0063*x40) + (3.51 + 
     (-0.0318*x41) - 0.0004*x42 - 0.0275*x43 - 0.018*x44 - 0.0601*x45 - 0.1491*
     x46 - 0.0032*x47 - 0.0433*x48 - 0.0754*x49 - 0.0063*x50)*(3.51 + (-0.0318*
     x41) - 0.0004*x42 - 0.0275*x43 - 0.018*x44 - 0.0601*x45 - 0.1491*x46 - 
     0.0032*x47 - 0.0433*x48 - 0.0754*x49 - 0.0063*x50) + (0.8 + (-0.0318*x51)
      - 0.0004*x52 - 0.0275*x53 - 0.018*x54 - 0.0601*x55 - 0.1491*x56 - 0.0032*
     x57 - 0.0433*x58 - 0.0754*x59 - 0.0063*x60)*(0.8 + (-0.0318*x51) - 0.0004*
     x52 - 0.0275*x53 - 0.018*x54 - 0.0601*x55 - 0.1491*x56 - 0.0032*x57 - 
     0.0433*x58 - 0.0754*x59 - 0.0063*x60)) + x64 =E= 0;

e4..  - ((7.02 + (-0.0007*x31) - 0.0009*x32 - 0.0043*x33 - 0.0179*x34 - 0.0604*
     x35 - 0.1385*x36 - 0.0051*x37 - 0.0635*x38 - 0.1098*x39 - 0.001*x40)*(7.02
      + (-0.0007*x31) - 0.0009*x32 - 0.0043*x33 - 0.0179*x34 - 0.0604*x35 - 
     0.1385*x36 - 0.0051*x37 - 0.0635*x38 - 0.1098*x39 - 0.001*x40) + (3.51 + (
     -0.0007*x41) - 0.0009*x42 - 0.0043*x43 - 0.0179*x44 - 0.0604*x45 - 0.1385*
     x46 - 0.0051*x47 - 0.0635*x48 - 0.1098*x49 - 0.001*x50)*(3.51 + (-0.0007*
     x41) - 0.0009*x42 - 0.0043*x43 - 0.0179*x44 - 0.0604*x45 - 0.1385*x46 - 
     0.0051*x47 - 0.0635*x48 - 0.1098*x49 - 0.001*x50) + (-0.0007*x51 - 0.0009*
     x52 - 0.0043*x53 - 0.0179*x54 - 0.0604*x55 - 0.1385*x56 - 0.0051*x57 - 
     0.0635*x58 - 0.1098*x59 - 0.001*x60)*(-0.0007*x51 - 0.0009*x52 - 0.0043*
     x53 - 0.0179*x54 - 0.0604*x55 - 0.1385*x56 - 0.0051*x57 - 0.0635*x58 - 
     0.1098*x59 - 0.001*x60)) + x65 =E= 0;

e5..  - ((-0.0534*x31 - 0.0005*x32 - 0.0704*x33 - 0.0351*x34 - 0.0981*x35 - 
     0.2389*x36 - 0.0015*x37 - 0.0048*x38 - 0.0038*x39 - 0.0132*x40)*(-0.0534*
     x31 - 0.0005*x32 - 0.0704*x33 - 0.0351*x34 - 0.0981*x35 - 0.2389*x36 - 
     0.0015*x37 - 0.0048*x38 - 0.0038*x39 - 0.0132*x40) + (7 + (-0.0534*x41) - 
     0.0005*x42 - 0.0704*x43 - 0.0351*x44 - 0.0981*x45 - 0.2389*x46 - 0.0015*
     x47 - 0.0048*x48 - 0.0038*x49 - 0.0132*x50)*(7 + (-0.0534*x41) - 0.0005*
     x42 - 0.0704*x43 - 0.0351*x44 - 0.0981*x45 - 0.2389*x46 - 0.0015*x47 - 
     0.0048*x48 - 0.0038*x49 - 0.0132*x50) + (1.4 + (-0.0534*x51) - 0.0005*x52
      - 0.0704*x53 - 0.0351*x54 - 0.0981*x55 - 0.2389*x56 - 0.0015*x57 - 0.0048
     *x58 - 0.0038*x59 - 0.0132*x60)*(1.4 + (-0.0534*x51) - 0.0005*x52 - 0.0704
     *x53 - 0.0351*x54 - 0.0981*x55 - 0.2389*x56 - 0.0015*x57 - 0.0048*x58 - 
     0.0038*x59 - 0.0132*x60)) + x66 =E= 0;

e6..  - ((10.16 + (-0.0773*x31) - 0.0009*x32 - 0.0683*x33 - 0.0024*x34 - 0.0025
     *x35 - 0.0248*x36 - 0.0094*x37 - 0.0891*x38 - 0.1443*x39 - 0.0203*x40)*(
     10.16 + (-0.0773*x31) - 0.0009*x32 - 0.0683*x33 - 0.0024*x34 - 0.0025*x35
      - 0.0248*x36 - 0.0094*x37 - 0.0891*x38 - 0.1443*x39 - 0.0203*x40) + (-
     0.0773*x41 - 0.0009*x42 - 0.0683*x43 - 0.0024*x44 - 0.0025*x45 - 0.0248*
     x46 - 0.0094*x47 - 0.0891*x48 - 0.1443*x49 - 0.0203*x50)*(-0.0773*x41 - 
     0.0009*x42 - 0.0683*x43 - 0.0024*x44 - 0.0025*x45 - 0.0248*x46 - 0.0094*
     x47 - 0.0891*x48 - 0.1443*x49 - 0.0203*x50) + (2.2 + (-0.0773*x51) - 
     0.0009*x52 - 0.0683*x53 - 0.0024*x54 - 0.0025*x55 - 0.0248*x56 - 0.0094*
     x57 - 0.0891*x58 - 0.1443*x59 - 0.0203*x60)*(2.2 + (-0.0773*x51) - 0.0009*
     x52 - 0.0683*x53 - 0.0024*x54 - 0.0025*x55 - 0.0248*x56 - 0.0094*x57 - 
     0.0891*x58 - 0.1443*x59 - 0.0203*x60)) + x67 =E= 0;

e7..  - ((1.04 + (-0.0536*x31) - 0.0005*x32 - 0.0842*x33 - 0.0108*x34 - 0.0394*
     x35 - 0.1122*x36 - 0.0015*x37 - 0.0213*x38 - 0.042*x39 - 0.0139*x40)*(1.04
      + (-0.0536*x31) - 0.0005*x32 - 0.0842*x33 - 0.0108*x34 - 0.0394*x35 - 
     0.1122*x36 - 0.0015*x37 - 0.0213*x38 - 0.042*x39 - 0.0139*x40) + (2.01 + (
     -0.0536*x41) - 0.0005*x42 - 0.0842*x43 - 0.0108*x44 - 0.0394*x45 - 0.1122*
     x46 - 0.0015*x47 - 0.0213*x48 - 0.042*x49 - 0.0139*x50)*(2.01 + (-0.0536*
     x41) - 0.0005*x42 - 0.0842*x43 - 0.0108*x44 - 0.0394*x45 - 0.1122*x46 - 
     0.0015*x47 - 0.0213*x48 - 0.042*x49 - 0.0139*x50) + (1.4 + (-0.0536*x51)
      - 0.0005*x52 - 0.0842*x53 - 0.0108*x54 - 0.0394*x55 - 0.1122*x56 - 0.0015
     *x57 - 0.0213*x58 - 0.042*x59 - 0.0139*x60)*(1.4 + (-0.0536*x51) - 0.0005*
     x52 - 0.0842*x53 - 0.0108*x54 - 0.0394*x55 - 0.1122*x56 - 0.0015*x57 - 
     0.0213*x58 - 0.042*x59 - 0.0139*x60)) + x68 =E= 0;

e8..  - ((2.04 + (-0.032*x31) - 0.0003*x32 - 0.0309*x33 - 0.0052*x34 - 0.0221*
     x35 - 0.0633*x36 - 0.0024*x37 - 0.031*x38 - 0.0574*x39 - 0.0057*x40)*(2.04
      + (-0.032*x31) - 0.0003*x32 - 0.0309*x33 - 0.0052*x34 - 0.0221*x35 - 
     0.0633*x36 - 0.0024*x37 - 0.031*x38 - 0.0574*x39 - 0.0057*x40) + (0.97 + (
     -0.032*x41) - 0.0003*x42 - 0.0309*x43 - 0.0052*x44 - 0.0221*x45 - 0.0633*
     x46 - 0.0024*x47 - 0.031*x48 - 0.0574*x49 - 0.0057*x50)*(0.97 + (-0.032*
     x41) - 0.0003*x42 - 0.0309*x43 - 0.0052*x44 - 0.0221*x45 - 0.0633*x46 - 
     0.0024*x47 - 0.031*x48 - 0.0574*x49 - 0.0057*x50) + (0.8 + (-0.032*x51) - 
     0.0003*x52 - 0.0309*x53 - 0.0052*x54 - 0.0221*x55 - 0.0633*x56 - 0.0024*
     x57 - 0.031*x58 - 0.0574*x59 - 0.0057*x60)*(0.8 + (-0.032*x51) - 0.0003*
     x52 - 0.0309*x53 - 0.0052*x54 - 0.0221*x55 - 0.0633*x56 - 0.0024*x57 - 
     0.031*x58 - 0.0574*x59 - 0.0057*x60)) + x69 =E= 0;

e9..    x31 =G= 0;

e10..    x32 =G= 0;

e11..    x33 =G= 0;

e12..    x34 =G= 0;

e13..    x35 =G= 0;

e14..    x36 =G= 0;

e15..    x37 =G= 0;

e16..    x38 =G= 0;

e17..    x39 =G= 0;

e18..    x40 =G= 0;

e19..    x41 =G= 0;

e20..    x42 =G= 0;

e21..    x43 =G= 0;

e22..    x44 =G= 0;

e23..    x45 =G= 0;

e24..    x46 =G= 0;

e25..    x47 =G= 0;

e26..    x48 =G= 0;

e27..    x49 =G= 0;

e28..    x50 =G= 0;

e29..    x51 =G= 0;

e30..    x52 =G= 0;

e31..    x53 =G= 0;

e32..    x54 =G= 0;

e33..    x55 =G= 0;

e34..    x56 =G= 0;

e35..    x57 =G= 0;

e36..    x58 =G= 0;

e37..    x59 =G= 0;

e38..    x60 =G= 0;

e39..  - 1000*b1 + x31 =L= 0;

e40..  - 1000*b2 + x32 =L= 0;

e41..  - 1000*b3 + x33 =L= 0;

e42..  - 1000*b4 + x34 =L= 0;

e43..  - 1000*b5 + x35 =L= 0;

e44..  - 1000*b6 + x36 =L= 0;

e45..  - 1000*b7 + x37 =L= 0;

e46..  - 1000*b8 + x38 =L= 0;

e47..  - 1000*b9 + x39 =L= 0;

e48..  - 1000*b10 + x40 =L= 0;

e49..  - 1000*b11 + x41 =L= 0;

e50..  - 1000*b12 + x42 =L= 0;

e51..  - 1000*b13 + x43 =L= 0;

e52..  - 1000*b14 + x44 =L= 0;

e53..  - 1000*b15 + x45 =L= 0;

e54..  - 1000*b16 + x46 =L= 0;

e55..  - 1000*b17 + x47 =L= 0;

e56..  - 1000*b18 + x48 =L= 0;

e57..  - 1000*b19 + x49 =L= 0;

e58..  - 1000*b20 + x50 =L= 0;

e59..  - 1000*b21 + x51 =L= 0;

e60..  - 1000*b22 + x52 =L= 0;

e61..  - 1000*b23 + x53 =L= 0;

e62..  - 1000*b24 + x54 =L= 0;

e63..  - 1000*b25 + x55 =L= 0;

e64..  - 1000*b26 + x56 =L= 0;

e65..  - 1000*b27 + x57 =L= 0;

e66..  - 1000*b28 + x58 =L= 0;

e67..  - 1000*b29 + x59 =L= 0;

e68..  - 1000*b30 + x60 =L= 0;

e69..    b1 + b2 + b3 + b4 + b5 + b6 + b7 + b8 + b9 + b10 =G= 0;

e70..    b11 + b12 + b13 + b14 + b15 + b16 + b17 + b18 + b19 + b20 =G= 0;

e71..    b21 + b22 + b23 + b24 + b25 + b26 + b27 + b28 + b29 + b30 =G= 0;

e72..  - b1 - b2 - b3 - b4 - b5 - b6 - b7 - b8 - b9 - b10 - b11 - b12 - b13
       - b14 - b15 - b16 - b17 - b18 - b19 - b20 - b21 - b22 - b23 - b24 - b25
       - b26 - b27 - b28 - b29 - b30 + x70 =E= 0;

e73..    objvar - x62 - x63 - x64 - x65 - x66 - x67 - x68 - x69 - 2*x70 =E= 0;

* set non default bounds

objvar.lo = -10000000; 

$if set nostart $goto modeldef
* set non default levels


* set non default marginals


$label modeldef
Model m / all /;

m.limrow=0; m.limcol=0;

$if NOT '%gams.u1%' == '' $include '%gams.u1%'

$if not set MINLP $set MINLP MINLP
Solve m using %MINLP% minimizing objvar;
